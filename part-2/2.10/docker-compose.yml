version: "3.8"

services:
  #Backend service
  backend:
    hostname: example-backend
    environment:
      REDIS_HOST: redis
      POSTGRES_HOST: postgresql
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
      REQUEST_ORIGIN: http://localhost:80
    depends_on:
      - db
      - redis
    build:
      context: ./example-backend
      dockerfile: Dockerfile
    container_name: example-backend

  #Frontend service
  frontend:
    hostname: frontend
    environment:
      REACT_APP_BACKEND_URL: http://backend/api
    depends_on:
      - backend
    build:
      context: ./example-frontend
      dockerfile: Dockerfile
    container_name: example-frontend

  #Redis service
  redis:
    hostname: redisx
    ports:
      - "6379:6379"
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
    image: redis
    restart: always
    command: redis-server --loglevel warning
    container_name: redis

  #Postgresql service
  db:
    container_name: postgresql
    hostname: postgresql
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DATABASE: postgres
    image: postgres:15.0-alpine
    restart: unless-stopped
    #EXERCISE 2.7 - Add a volume to persist the data.
    volumes:
      - ./database:/var/lib/postgresql/data

  #Nginx service (reverse proxy)
  nginx:
    image: nginx
    container_name: "reverse_proxy"
    tty: true
    stdin_open: true
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - ./nginx.conf:/etc/nginx/nginx.conf
    ports:
      - 80:80
    depends_on:
      - frontend

volumes:
  database:
  nginx.conf:
